"use client";

import { useState } from 'react';
import axios from 'axios';

export default function SignUp() {
  const [username, setUsername] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [specialKey, setSpecialKey] = useState<string>(''); // Include specialKey
  const [message, setMessage] = useState<string>('');
  const [loading, setLoading] = useState<boolean>(false); // Loading state

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setLoading(true); // Set loading state

    try {
      const response = await axios.post('/api/signup', {
        username,
        password,
        specialKey, // Send specialKey with the request
      });

      setMessage(response.data.message); // Handle success message
    } catch (error) {
      if (axios.isAxiosError(error)) {
        setMessage(error.response?.data.message || 'An error occurred while creating the account');
      } else {
        setMessage('An unexpected error occurred');
      }
    } finally {
      setLoading(false); // Reset loading state
    }
  };

  return (
    <form onSubmit={handleSubmit} className="flex flex-col items-center p-8 rounded-lg shadow-md w-96">
      <h1 className="text-2xl mb-4 text-center">Sign Up</h1>
      <input
        type="text"
        placeholder="Username"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
        required
        disabled={loading}
        className="mb-4 p-2 border rounded w-full text-black"
      />
      <input
        type="password"
        placeholder="Password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        required
        disabled={loading}
        className="mb-4 p-2 border rounded w-full text-black"
      />
      <input
        type="text"
        placeholder="Special Key"
        value={specialKey}
        onChange={(e) => setSpecialKey(e.target.value)}
        required
        disabled={loading}
        className="mb-4 p-2 border rounded w-full text-black"
      />
      <button 
        type="submit" 
        disabled={loading} 
        className="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 w-full"
      >
        {loading ? 'Loading...' : 'Create Account'}
      </button>
      {message && <p className="text-red-500 mt-2">{message}</p>} {/* Error message styling */}
    </form>
  );
}
